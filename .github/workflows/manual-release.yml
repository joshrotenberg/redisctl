name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch
      dry_run:
        description: "Dry run (do not publish)"
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-release
        run: cargo install cargo-release

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Dry Run Release
        if: inputs.dry_run
        run: |
          echo "Running dry run for ${{ inputs.version }} version bump..."
          cargo release version ${{ inputs.version }} --execute --no-confirm
          cargo release replace --execute --no-confirm
          cargo release hook --execute --no-confirm
          echo "Dry run complete - no changes were pushed"

      - name: Execute Release
        if: ${{ !inputs.dry_run }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          echo "Releasing ${{ inputs.version }} version..."
          cargo release ${{ inputs.version }} --execute --no-confirm

      - name: Get New Version
        if: ${{ !inputs.dry_run }}
        id: version
        run: |
          VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "redisctl") | .version')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Released version: $VERSION"

      - name: Create GitHub Release
        if: ${{ !inputs.dry_run }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
