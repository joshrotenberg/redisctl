name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch
      dry_run:
        description: "Dry run (do not publish)"
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global init.defaultBranch main
          git config --global push.autoSetupRemote true

      - name: Cache cargo registry and tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-tools-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-tools-

      - name: Install cargo-release
        run: |
          if ! command -v cargo-release &> /dev/null; then
            echo "Installing cargo-release..."
            cargo install cargo-release
          else
            echo "cargo-release already installed"
          fi

      - name: Dry Run Release
        if: inputs.dry_run
        run: |
          echo "Running dry run for ${{ inputs.version }} version bump..."
          cargo release version ${{ inputs.version }} --execute --no-confirm --verbose
          cargo release replace --execute --no-confirm --verbose
          cargo release hook --execute --no-confirm --verbose
          echo "Dry run complete - no changes were pushed"

      - name: Execute Release
        if: ${{ !inputs.dry_run }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          CARGO_TERM_COLOR: always
          RUST_BACKTRACE: 1
        run: |
          echo "Releasing ${{ inputs.version }} version..."

          # Run cargo-release - it will handle everything
          # Use --workspace to release all workspace packages
          cargo release ${{ inputs.version }} --workspace --execute --no-confirm --verbose || {
            echo "::error::cargo-release failed. Check the logs above for details."
            exit 1
          }

      - name: Report Status
        if: always()
        run: |
          echo "Release status: ${{ job.status }}"
          if [ "${{ job.status }}" = "failure" ]; then
            echo "::error::Release failed. Check logs above."
            echo "Recovery steps if needed:"
            echo "1. Delete partial tags: git push --delete origin v[VERSION]"
            echo "2. Delete local tag: git tag -d v[VERSION]"
            echo "3. Yank from crates.io if partially published"
            echo "4. Revert commits if necessary: git revert HEAD"
          elif [ "${{ job.status }}" = "success" ] && [ "${{ inputs.dry_run }}" != "true" ]; then
            echo "::notice::Release completed successfully!"
            echo "Next steps:"
            echo "1. Wait for cargo-dist workflow to build binaries"
            echo "2. Wait for Docker workflow to build images"
            echo "3. Verify packages on crates.io"
          fi
